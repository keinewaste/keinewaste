parameters:
    logger.file: @log.file@
    logger.level: @log.level@
    logger.channel: "keinewaste"
    app.debug: @app.debug@
    http_cache: false

    cache-control.ping: "public, no-cache"
    cache-control.users: "public, no-cache"

    aws.access_key_id: @aws.access_key_id@
    aws.secret_access_key: @aws.secret_access_key@
    aws.ses.region: 'eu-west-1'

    fb.appid: @fb.appid@
    fb.secret: @fb.secret@

    mailing.from: 'hackathon <info@reputat.io>'

    app.config: &app.config
      api.locale.defaultAppDomain: "1"
      api.locale.defaultLocale: "tr_TR"
      api.locale.allowedlist: {"tr_TR": 1}


    rest.defaults: &rest.defaults
      <<: *app.config
      limit: "30"
      offset: "0"
      ttl: "300"

    rest.ping.defaults:
      <<: *rest.defaults

    rest.entries.defaults:
      <<: *rest.defaults

    rest.users.defaults:
      <<: *rest.defaults

    rest.messages.defaults:
      <<: *rest.defaults

    rest.notificationHandler.defaults:
      <<: *rest.defaults

    memcached.servers:
      @memcached.servers.1@
      @memcached.servers.2@
      @memcached.servers.3@
      @memcached.servers.4@
      @memcached.servers.5@
      @memcached.servers.6@

    mysql.dsn: @mysql.dsn@
    mysql.host: @mysql.host@
    mysql.port: @mysql.port@
    mysql.charset: @mysql.charset@
    mysql.user: @mysql.user@
    mysql.password: @mysql.password@

    root.path: @project.root@

    doctrine.autogenerate_proxies: @doctrine.autogenerate_proxies@

    spoonacular.baseUrl: "https://spoonacular-recipe-food-nutrition-v1.p.mashape.com"
    spoonacular.baseUrlRecipeImage: "https://spoonacular.com/recipeImages/"
    spoonacular.baseUrlIngredientImage: "https://spoonacular.com/cdn/ingredients_100x100/"
    spoonacular.headers:
        X-Mashape-Key: @mashapeKey@

services:
    # Application
    App:
        class: "KeineWaste\\Application\\Application"
        arguments:
         -
            debug                    : '%app.debug%'
            cache                    : '%http_cache%'
            controllers.ping         : '@PingController'
            controllers.user         : '@UserController'
            controllers.users        : '@UsersController'
            controllers.messages     : '@MessagesController'
            controllers.categories : '@CategoriesController'
            controllers.autocomplete : '@AutocompleteController'
            controllers.market : '@MarketController'

        calls:
         - [register, ['@ServiceControllerServiceProvider']]


    ServiceControllerServiceProvider:
        class: "Silex\\Provider\\ServiceControllerServiceProvider"
        public: false

    PdoConnection:
        class: Pdo
        lazy: false
        arguments:
            - '%mysql.dsn%'
            - '%mysql.user%'
            - '%mysql.password%'

    MemcachedConnection:
        class: "Memcached"
        public: false
        calls:
          -
            - setOptions
            -
              -
                16: true #OPT_LIBKETAMA_COMPATIBLE
                15: 1 #OPT_RETRY_TIMEOUT
                14: 20 #OPT_CONNECT_TIMEOUT
          - [addServers, ['%memcached.servers%']]

# Logger
    Logger:
        class: "Monolog\\Logger"
        public: true
        arguments:
          - '%logger.channel%'
        calls:
          - [pushHandler, ['@Logger.fileHandler']]
          - [pushProcessor, ['@Logger.memoryPeakUsageProcessor']]

    Logger.fileHandler:
        class: "Monolog\\Handler\\StreamHandler"
        public: false
        arguments:
          - '%logger.file%'
          - '%logger.level%'
        calls:
          - [setFormatter, ['@Logger.formatter']]
          - [setFormatter, ['@Logger.formatter.color']]

    Logger.formatter:
        class: "Monolog\\Formatter\\LineFormatter"
        public: false
        arguments:
          - null
          - null
          - true
        calls:
          - [includeStacktraces]

    Logger.formatter.color:
        class: "Bramus\\Monolog\\Formatter\\ColoredLineFormatter"
        public: false

    Logger.memoryPeakUsageProcessor:
        class: "Monolog\\Processor\\MemoryPeakUsageProcessor"


#Facebook Login
    FacebookSDK:
        class: "Facebook\\Facebook"
        lazy: false
        public: false
        arguments:
          -
            app_id:                 '%fb.appid%'
            app_secret:             '%fb.secret%'
            default_graph_version:  'v2.2'

#Doctrine
    DoctrineSQLLogger:
        class: "Cobaia\\Doctrine\\MonologSQLLogger"
        lazy: false
        public: false
        arguments:
          - null
          - '@Logger.fileHandler'

    DoctrineArrayCache:
        class: "Doctrine\\Common\\Cache\\ArrayCache"
        lazy: false
        public: false

    DoctrineMemcachedDriver:
        class: "Doctrine\\Common\\Cache\\MemcachedCache"
        lazy: false
        public: false
        calls:
          - [setMemcached, ['@MemcachedConnection']]

    DoctrineCacheChain:
        class: "Doctrine\\Common\\Cache\\ChainCache"
        public: false
        lazy: false
        arguments:
          -
            - '@DoctrineArrayCache'
            - '@DoctrineMemcachedDriver'

    DoctrineAnnotations:
        class: "Doctrine\\ORM\\Configuration"
        factory: ["Doctrine\\ORM\\Tools\\Setup", "createAnnotationMetadataConfiguration"]
        public: false
        lazy: false
        arguments:
          -
            - '%root.path%/src/Dto'
          - "%app.debug%"
        calls:
          - [setResultCacheImpl, ['@DoctrineCacheChain']]
          - [setQueryCacheImpl, ['@DoctrineCacheChain']]
          - [setMetadataCacheImpl, ['@DoctrineCacheChain']]
          - [setProxyDir, ['%root.path%/src/Dto/Proxy']]
          - [setProxyNamespace, ["KeineWaste\\Dto\\Proxy"]]
          - [setAutoGenerateProxyClasses, [%doctrine.autogenerate_proxies%]]
          - [setSQLLogger, ['@DoctrineSQLLogger']]


    DoctrineEntityManager:
        class: "Doctrine\\ORM\\EntityManager"
        public: true
        factory: ["Doctrine\\ORM\\EntityManager", "create"]
        arguments:
          -
            pdo: '@PdoConnection'
          - '@DoctrineAnnotations'

#Tasks
    ImportTask:
        class: "KeineWaste\\Console\\ImportData"
        lazy: true
        arguments:
          - '@DoctrineEntityManager'
          -
            - '@CategoryFixture'
            - '@InitFixture'

#Services
    SpoonacularApi:
        class: "KeineWaste\\Services\\Spoonacular"
        lazy: true
        arguments:
          - '%spoonacular.baseUrl%'
          - '%spoonacular.headers%'
          - '%spoonacular.baseUrlRecipeImage%'
          - '%spoonacular.baseUrlIngredientImage%'

    MarketService:
        class: "KeineWaste\\Services\\MarketService"
        lazy: true
        arguments:
          - '@DoctrineEntityManager'

#Fixtures
    InitFixture:
        class: "KeineWaste\\Fixtures\\Init"
    CategoryFixture:
        class: "KeineWaste\\Fixtures\\Categories"

#Controllers

    DefaultControllerConfig:
        class: "KeineWaste\\Config\\Endpoint"
        lazy: true
        public: false
        arguments:
         - # Properties
           '%rest.defaults%'
        lazy: true

    #Ping Controller
    PingControllerConfig:
        class: "KeineWaste\\Config\\Endpoint"
        lazy: true
        public: false
        arguments:
         - # Properties
           '%rest.ping.defaults%'
        lazy: true

    DefaultResponse:
        class: "Symfony\\Component\\HttpFoundation\\JsonResponse"
        lazy: true
        public: false
        arguments:
         - ""
         - 200
         -
           Cache-Control : "%cache-control.ping%"

    PingDefaultResponse:
        class: "Symfony\\Component\\HttpFoundation\\JsonResponse"
        lazy: true
        public: false
        arguments:
         - ""
         - 200
         -
           Cache-Control : "%cache-control.ping%"

    PingController:
        class: "KeineWaste\\Controllers\\PingController"
        lazy: true
        public: false
        calls:
         - [setResponse, ['@PingDefaultResponse']]
         - [setConfig, ['@PingControllerConfig']]
         - [setUserService, ['@UserService']]

    UserController:
        class: "KeineWaste\\Controllers\\UserController"
        lazy: true
        public: false
        arguments:
         - '@UserService'
        calls:
         - [setResponse, ['@DefaultResponse']]
         - [setConfig, ['@DefaultControllerConfig']]
         - [setUserService, ['@UserService']]

    UsersController:
        class: "KeineWaste\\Controllers\\UsersController"
        lazy: true
        public: false
        arguments:
         - '@UserService'
        calls:
         - [setResponse, ['@DefaultResponse']]
         - [setConfig, ['@DefaultControllerConfig']]
         - [setUserService, ['@UserService']]

    MarketController:
        class: "KeineWaste\\Controllers\\MarketController"
        lazy: true
        public: false
        arguments:
         - '@MarketService'
        calls:
         - [setResponse, ['@DefaultResponse']]
         - [setConfig, ['@DefaultControllerConfig']]
         - [setUserService, ['@UserService']]

    CategoriesController:
        class: "KeineWaste\\Controllers\\CategoriesController"
        lazy: true
        public: false
        arguments:
         - '@DoctrineEntityManager'
        calls:
         - [setResponse, ['@DefaultResponse']]
         - [setConfig, ['@DefaultControllerConfig']]
         - [setUserService, ['@UserService']]

    AutocompleteController:
        class: "KeineWaste\\Controllers\\AutocompleteController"
        lazy: true
        public: false
        arguments:
         - '@SpoonacularApi'
        calls:
         - [setResponse, ['@DefaultResponse']]
         - [setConfig, ['@DefaultControllerConfig']]
         - [setUserService, ['@UserService']]


    MessagesController:
        class: "KeineWaste\\Controllers\\MessagesController"
        lazy: true
        public: false
        arguments:
         - '@MessageService'
         - '@UserService'
        calls:
         - [setResponse, ['@DefaultResponse']]
         - [setConfig, ['@DefaultControllerConfig']]
         - [setUserService, ['@UserService']]

# Services

    AwsCommonCredentialsCredentials:
        class: "Aws\\Credentials\\Credentials"
        arguments:
          - %aws.access_key_id%
          - %aws.secret_access_key%

#Notification Service
    AwsSesClient:
        class: "Aws\\Ses\\SesClient"
        public: false
        lazy: false
        arguments:
          -
            region      : '%aws.ses.region%'
            version     : 'latest'
            credentials : '@AwsCommonCredentialsCredentials'

    MailingService:
        class: "KeineWaste\\Services\\MailingService"
        lazy: true
        public: false
        arguments:
          - '@AwsSesClient'
          - '%mailing.from%'
        calls:
          - [setLogger, ['@Logger']]

    UserRepository:
        class: "KeineWaste\\Services\\Repository\\UserRepository"
        lazy: false
        public: false
        arguments:
          - '@DoctrineEntityManager'
        calls:
          - [setLogger, ['@Logger']]

    UserService:
        class: "KeineWaste\\Services\\UserService"
        lazy: true
        public: false
        arguments:
          - '@UserRepository'
          - '@FacebookSDK'
        calls:
          - [setLogger, ['@Logger']]
          - [setMemcached, ['@MemcachedConnection']]


    MessageRepository:
        class: "KeineWaste\\Services\\Repository\\MessageRepository"
        lazy: false
        public: false
        arguments:
          - '@DoctrineEntityManager'
        calls:
          - [setLogger, ['@Logger']]

    MessageService:
        class: "KeineWaste\\Services\\MessageService"
        lazy: true
        public: false
        arguments:
          - '@MessageRepository'
        calls:
          - [setLogger, ['@Logger']]

